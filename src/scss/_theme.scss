@use "sass:color";
@use "sass:list";
@use "../../node_modules/stalfos/src/default-config";
@use "../../node_modules/stalfos/src/functions/get-color";
@use "mixins/dark-mode";

:root {
  // Pull the tokens and generate custom props
  @each $color in default-config.$stalfos-colors {
    #{'--color-' + list.nth($color, 1)}: #{list.nth($color, 2)};
  }

  // Set theme aliases
  --color-mode: 'light';
  --color-bg: #{get-color.get-color('light')};
  --color-bg-glare: #{get-color.get-color('light')};
  --color-text: #{get-color.get-color('dark')};
  --color-text-glare: #{get-color.get-color('dark')};
  --color-selection-text: #{get-color.get-color('light')};
  --color-selection-bg: #{get-color.get-color('dark')};
  --color-stroke: #{get-color.get-color('mid')};
  --color-action-bg: #{get-color.get-color('primary')};
  --color-action-text: #{get-color.get-color('light')};
  --color-theme-primary: #{get-color.get-color('primary')};
  --color-theme-primary-glare: #{get-color.get-color('primary-glare')};
  --color-theme-highlight: #{get-color.get-color('highlight')};
  --color-theme-highlight-block: #{get-color.get-color('highlight')};
}

@include dark-mode.dark-mode() {
  --color-bg: #{get-color.get-color('dark')};
  --color-bg-glare: #{get-color.get-color('slate')};
  --color-text: #{get-color.get-color('light')};
  --color-selection-text: #{get-color.get-color('dark')};
  --color-selection-bg: #{get-color.get-color('light')};
  --color-stroke: #{get-color.get-color('slate')};
  --color-theme-primary: color.adjust(get-color.get-color('primary'), $lightness: 50%);
  --color-theme-primary-glare: color.adjust(get-color.get-color('primary-glare'), $lightness: 50%);
  --color-action-bg: var(--color-theme-primary-glare);
  --color-action-text: #{get-color.get-color('dark')};
  --color-theme-highlight: #{get-color.get-color('highlight')};
  --color-theme-highlight-block: #{get-color.get-color('slate')};
  --color-theme-feature-text: #{get-color.get-color('highlight')};
}

body {
  color: var(--color-text);
  background-color: var(--color-bg);
}

main {
  overflow: hidden;
}

::selection {
  color: var(--color-selection-text);
  background-color: var(--color-selection-bg);
}
